{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Home.jsx","components/unit-converter/Length.jsx","components/unit-converter/Weight.jsx","components/unit-converter/Bmi.jsx","components/unit-converter/Area.jsx","components/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","toggleNav","bind","state","isNavOpen","this","setState","Navbar","dark","expand","className","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","to","icon","Component","Footer","href","Home","Container","Row","Col","sm","md","size","offset","Length","m","ft","cm","in","handleMChange","handleFtChange","handleCmChange","handleInChange","calculate","e","target","value","_value","num","Breadcrumb","BreadcrumbItem","active","id","type","onChange","htmlFor","name","Weight","kg","g","t","lb","oz","jin","tael","handleKgChange","handleGChange","handleTChange","handleLbChange","handleOzChange","handleJinChange","handleTaelChange","BmiDisplay","alertClass","bmi","label","Bmi","weight","height","handleHeightChange","handleWeightChange","calculateBMI","toFixed","bmiResults","results","getBMIResults","Area","m2","ft2","cm2","handleM2Change","handleFt2Change","handleCm2Change","handleIn2Change","in2","Main","TransitionGroup","CSSTransition","classNames","timeout","location","exact","path","component","key","withRouter","library","add","fab","faHome","faRuler","faUserMd","faWeight","faChartArea","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oUAiDeA,E,kDA1CX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,MAAM,CACPC,WAAU,GAJC,E,6CAOnB,WACIC,KAAKC,SAAS,CACZF,WAAYC,KAAKF,MAAMC,c,oBAG7B,WACI,OACI,cAACG,EAAA,EAAD,CAAQC,MAAI,EAACC,OAAO,KAApB,SACI,sBAAKC,UAAU,SAAf,UACI,cAACC,EAAA,EAAD,CAAeC,QAASP,KAAKJ,YAC7B,cAACY,EAAA,EAAD,CAAUC,OAAQT,KAAKF,MAAMC,UAAWW,QAAM,EAA9C,SACI,eAACC,EAAA,EAAD,CAAKD,QAAM,EAAX,UACI,cAACE,EAAA,EAAD,UACI,eAAC,IAAD,CAASP,UAAU,WAAWQ,GAAG,kBAAkBN,QAASP,KAAKJ,UAAjE,UAA4E,cAAC,IAAD,CAAiBkB,KAAK,SAAlG,qBAEJ,cAACF,EAAA,EAAD,UACI,eAAC,IAAD,CAASP,UAAU,WAAWQ,GAAG,sBAAsBN,QAASP,KAAKJ,UAArE,UAAgF,cAAC,IAAD,CAAiBkB,KAAK,YAAtG,8BAEJ,cAACF,EAAA,EAAD,UACI,eAAC,IAAD,CAASP,UAAU,WAAWQ,GAAG,yBAAyBN,QAASP,KAAKJ,UAAxE,UAAmF,cAAC,IAAD,CAAiBkB,KAAK,UAAzG,uCAEJ,cAACF,EAAA,EAAD,UACI,eAAC,IAAD,CAASP,UAAU,WAAWQ,GAAG,yBAAyBN,QAASP,KAAKJ,UAAxE,UAAmF,cAAC,IAAD,CAAiBkB,KAAK,WAAzG,uCAEJ,cAACF,EAAA,EAAD,UACI,eAAC,IAAD,CAASP,UAAU,WAAWQ,GAAG,uBAAuBN,QAASP,KAAKJ,UAAtE,UAAiF,cAAC,IAAD,CAAiBkB,KAAK,eAAvG,qD,GAjCXC,aC8BNC,MAhCf,SAAgBrB,GACZ,OACA,qBAAKU,UAAU,SAAf,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,sBAAKA,UAAU,0BAAf,UACI,0DACA,qBAAIA,UAAU,gBAAd,UACA,6BAAI,cAAC,IAAD,CAAMQ,GAAG,kBAAT,4BACA,6BAAI,cAAC,IAAD,CAAMA,GAAG,sBAAT,qCACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,yBAAT,kCAIZ,sBAAKR,UAAU,oCAAf,UACA,2DACI,qBAAIA,UAAU,gBAAd,UACI,6BAAI,cAAC,IAAD,CAAMQ,GAAG,yBAAT,4BACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,uBAAT,qCAIhB,qBAAKR,UAAU,6BAAf,SACI,qBAAKA,UAAU,WAAf,SACI,qDAAoB,mBAAGY,KAAK,GAAR,oC,wBCZzBC,MAbf,SAAcvB,GACV,OACI,eAACwB,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAApC,8CAEJ,cAACL,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAApC,sI,uCC2HGC,E,kDAhIX,aAAe,IAAD,8BACV,gBACK5B,MAAQ,CACT6B,EAAG,GACHC,GAAI,GACJC,GAAG,GACHC,GAAG,IAEP,EAAKC,cAAgB,EAAKA,cAAclC,KAAnB,gBACrB,EAAKmC,eAAiB,EAAKA,eAAenC,KAApB,gBACtB,EAAKoC,eAAiB,EAAKA,eAAepC,KAApB,gBACtB,EAAKqC,eAAiB,EAAKA,eAAerC,KAApB,gBACtB,EAAKsC,UAAY,EAAKA,UAAUtC,KAAf,gBAZP,E,kDAgBd,SAAeuC,GACXpC,KAAKC,SAAS,CACV4B,GAAIO,EAAEC,OAAOC,QAEjBtC,KAAKmC,UAAU,KAAMC,EAAEC,OAAOC,S,4BAElC,SAAeF,GACXpC,KAAKC,SAAS,CACV6B,GAAIM,EAAEC,OAAOC,QAEjBtC,KAAKmC,UAAU,KAAMC,EAAEC,OAAOC,S,2BAElC,SAAcF,GACVpC,KAAKC,SAAS,CACV0B,EAAGS,EAAEC,OAAOC,QAEhBtC,KAAKmC,UAAU,IAAKC,EAAEC,OAAOC,S,4BAEjC,SAAeF,GACXpC,KAAKC,SAAS,CACV2B,GAAIQ,EAAEC,OAAOC,QAEjBtC,KAAKmC,UAAU,KAAMC,EAAEC,OAAOC,S,uBAElC,SAAUC,EAAQC,GACV,OAAOD,GACH,IAAK,IAAKvC,KAAKC,SAAS,CACpB2B,GAAQ,QAAJY,EACJX,GAAQ,IAAJW,EACJV,GAAIU,EAAI,QAEZ,MACA,IAAK,KAAKxC,KAAKC,SAAS,CACpB0B,EAAEa,EAAI,QACNX,GAAIW,EAAI,MACRV,GAAO,GAAJU,IAEP,MACA,IAAK,KAAMxC,KAAKC,SAAS,CACrB2B,GAAQ,QAAJY,EACJb,EAAO,GAAJa,EACHV,GAAGU,EAAI,OAEX,MACA,IAAK,KAAKxC,KAAKC,SAAS,CACpB0B,EAAEa,EAAI,QACNX,GAAO,KAAJW,EACHZ,GAAGY,EAAI,Q,oBAMvB,WACI,OACI,sBAAKnC,UAAU,YAAf,UACO,eAACoC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,UAAgB,cAAC,IAAD,CAAM7B,GAAG,kBAAT,4BAChB,cAAC6B,EAAA,EAAD,CAAgBC,QAAM,EAAtB,+CAEJ,qBAAKtC,UAAU,kBAAf,SACI,qBAAKA,UAAU,YAAf,SACI,iCACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,4CACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uBAAOA,UAAU,eAAeuC,GAAG,IAAIC,KAAK,SAASP,MAAOtC,KAAKF,MAAM6B,EAAGmB,SAAU9C,KAAK+B,gBACzF,uBAAO1B,UAAU,gBAAgB0C,QAAQ,IAAzC,uBAIZ,sBAAK1C,UAAU,mBAAf,UACI,4CACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uBAAOA,UAAU,eAAeuC,GAAG,KAAKC,KAAK,SAASG,KAAK,KAAKV,MAAOtC,KAAKF,MAAM8B,GAAIkB,SAAU9C,KAAKgC,iBACrG,uBAAO3B,UAAU,gBAAgB0C,QAAQ,KAAzC,2BAKhB,uBACA,sBAAK1C,UAAU,MAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,kDACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uBAAOA,UAAU,eAAeuC,GAAG,KAAKC,KAAK,SAASP,MAAOtC,KAAKF,MAAM+B,GAAIiB,SAAU9C,KAAKiC,iBAC3F,uBAAO5B,UAAU,gBAAgB0C,QAAQ,KAAzC,wBAIZ,sBAAK1C,UAAU,mBAAf,UACI,4CACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uBAAOA,UAAU,eAAeuC,GAAG,KAAKC,KAAK,SAASG,KAAK,KAAKV,MAAOtC,KAAKF,MAAMgC,GAAIgB,SAAU9C,KAAKkC,iBACrG,uBAAO7B,UAAU,gBAAgB0C,QAAQ,KAAzC,yC,GApHvBhC,aCkONkC,E,kDAjOX,aAAe,IAAD,8BACV,gBACKnD,MAAQ,CACToD,GAAI,GACJC,EAAG,GACHC,EAAE,GACFC,GAAG,GACHC,GAAG,GACHC,IAAI,GACJC,KAAK,IAET,EAAKC,eAAiB,EAAKA,eAAe5D,KAApB,gBACtB,EAAK6D,cAAgB,EAAKA,cAAc7D,KAAnB,gBACrB,EAAK8D,cAAgB,EAAKA,cAAc9D,KAAnB,gBACrB,EAAK+D,eAAiB,EAAKA,eAAe/D,KAApB,gBACtB,EAAKgE,eAAiB,EAAKA,eAAehE,KAApB,gBACtB,EAAKiE,gBAAkB,EAAKA,gBAAgBjE,KAArB,gBACvB,EAAKkE,iBAAmB,EAAKA,iBAAiBlE,KAAtB,gBAExB,EAAKsC,UAAY,EAAKA,UAAUtC,KAAf,gBAnBP,E,kDAuBd,SAAeuC,GACXpC,KAAKC,SAAS,CACViD,GAAId,EAAEC,OAAOC,QAEjBtC,KAAKmC,UAAU,KAAMC,EAAEC,OAAOC,S,2BAElC,SAAcF,GACVpC,KAAKC,SAAS,CACVkD,EAAGf,EAAEC,OAAOC,QAEhBtC,KAAKmC,UAAU,IAAKC,EAAEC,OAAOC,S,2BAEjC,SAAcF,GACVpC,KAAKC,SAAS,CACVmD,EAAGhB,EAAEC,OAAOC,QAEhBtC,KAAKmC,UAAU,IAAKC,EAAEC,OAAOC,S,4BAEjC,SAAeF,GACXpC,KAAKC,SAAS,CACVoD,GAAIjB,EAAEC,OAAOC,QAEjBtC,KAAKmC,UAAU,KAAMC,EAAEC,OAAOC,S,4BAElC,SAAeF,GACXpC,KAAKC,SAAS,CACVqD,GAAIlB,EAAEC,OAAOC,QAEjBtC,KAAKmC,UAAU,KAAMC,EAAEC,OAAOC,S,6BAGlC,SAAgBF,GACZpC,KAAKC,SAAS,CACVsD,IAAKnB,EAAEC,OAAOC,QAElBtC,KAAKmC,UAAU,MAAOC,EAAEC,OAAOC,S,8BAEnC,SAAiBF,GACbpC,KAAKC,SAAS,CACVuD,KAAMpB,EAAEC,OAAOC,QAEnBtC,KAAKmC,UAAU,OAAQC,EAAEC,OAAOC,S,uBAEpC,SAAUC,EAAQC,GACV,OAAOD,GACH,IAAK,KAAMvC,KAAKC,SAAS,CACrBkD,EAAO,IAAJX,EACHY,EAAGZ,EAAI,IACPa,GAAQ,MAAJb,EACJc,GAAQ,OAAJd,EACJe,IAAIf,EAAI,MACRgB,KAAS,MAAJhB,IAET,MACA,IAAK,IAAKxC,KAAKC,SAAS,CACpBiD,GAAIV,EAAI,IACRY,EAAGZ,EAAI,IACPa,GAAIb,EAAI,IACRc,GAAQ,MAAJd,EACJe,IAAIf,EAAI,IACRgB,KAAKhB,EAAI,QAEb,MACA,IAAK,IAAKxC,KAAKC,SAAS,CACpBkD,EAAO,IAAJX,EACHU,GAAQ,IAAJV,EACJa,GAAQ,KAAJb,EACJc,GAAQ,MAAJd,EACJe,IAAQ,KAAJf,EACJgB,KAAS,SAAJhB,IAET,MACA,IAAK,KAAMxC,KAAKC,SAAS,CACrBkD,EAAO,IAAJX,EACHY,EAAGZ,EAAI,KACPU,GAAIV,EAAI,MACRc,GAAQ,GAAJd,EACJe,IAAIf,EAAI,MACRgB,KAAS,GAAJhB,IAET,MACA,IAAK,KAAMxC,KAAKC,SAAS,CACrBkD,EAAGX,EAAI,MACPY,EAAGZ,EAAI,MACPa,GAAIb,EAAI,GACRU,GAAIV,EAAI,OACRe,IAAIf,EAAI,MACRgB,KAAS,KAAJhB,IAET,MACA,IAAK,MAAOxC,KAAKC,SAAS,CACtBkD,EAAO,IAAJX,EACHY,EAAGZ,EAAI,KACPU,GAAIV,EAAI,MACRc,GAAQ,GAAJd,EACJa,GAAO,MAAJb,EACHgB,KAAS,GAAJhB,IAET,MACA,IAAK,OAAQxC,KAAKC,SAAS,CACvBkD,EAAO,MAAJX,EACHY,EAAGZ,EAAI,SACPa,GAAIb,EAAI,GACRU,GAAIV,EAAI,MACRe,IAAIf,EAAI,GACRc,GAAGd,EAAI,U,oBAOvB,WACI,OACI,sBAAKnC,UAAU,YAAf,UACO,eAACoC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,UAAgB,cAAC,IAAD,CAAM7B,GAAG,kBAAT,4BAChB,cAAC6B,EAAA,EAAD,CAAgBC,QAAM,EAAtB,+CAEJ,qBAAKtC,UAAU,kBAAf,SACI,qBAAKA,UAAU,YAAf,SACI,iCACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,kDACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uBAAOA,UAAU,eAAeuC,GAAG,KAAKC,KAAK,SAASP,MAAOtC,KAAKF,MAAMoD,GAAIJ,SAAU9C,KAAKyD,iBAC3F,uBAAOpD,UAAU,gBAAgB0C,QAAQ,KAAzC,wBAIZ,sBAAK1C,UAAU,mBAAf,UACI,4CACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uBAAOA,UAAU,eAAeuC,GAAG,IAAIC,KAAK,SAASG,KAAK,IAAIV,MAAOtC,KAAKF,MAAMqD,EAAGL,SAAU9C,KAAK0D,gBAClG,uBAAOrD,UAAU,gBAAgB0C,QAAQ,IAAzC,0BAKhB,uBACA,sBAAK1C,UAAU,MAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,4CACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uBAAOA,UAAU,eAAeuC,GAAG,IAAIC,KAAK,SAASP,MAAOtC,KAAKF,MAAMsD,EAAGN,SAAU9C,KAAK2D,gBACzF,uBAAOtD,UAAU,gBAAgB0C,QAAQ,IAAzC,uBAIZ,sBAAK1C,UAAU,mBAAf,UACI,4CACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uBAAOA,UAAU,eAAeuC,GAAG,KAAKC,KAAK,SAASG,KAAK,KAAKV,MAAOtC,KAAKF,MAAMuD,GAAIP,SAAU9C,KAAK4D,iBACrG,uBAAOvD,UAAU,gBAAgB0C,QAAQ,KAAzC,2BAKZ,qBAAK1C,UAAU,MAAf,SACA,sBAAKA,UAAU,mBAAf,UACI,kDACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uBAAOA,UAAU,eAAeuC,GAAG,KAAKC,KAAK,SAASG,KAAK,KAAKV,MAAOtC,KAAKF,MAAMwD,GAAIR,SAAU9C,KAAK6D,iBACrG,uBAAOxD,UAAU,gBAAgB0C,QAAQ,KAAzC,0BAKhB,sBAAK1C,UAAU,MAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,4CACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uBAAOA,UAAU,eAAeuC,GAAG,MAAMC,KAAK,SAASP,MAAOtC,KAAKF,MAAMyD,IAAKT,SAAU9C,KAAK8D,kBAC7F,uBAAOzD,UAAU,gBAAgB0C,QAAQ,MAAzC,yBAIZ,sBAAK1C,UAAU,mBAAf,UACI,4CACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uBAAOA,UAAU,eAAeuC,GAAG,OAAOC,KAAK,SAASG,KAAK,OAAOV,MAAOtC,KAAKF,MAAM0D,KAAMV,SAAU9C,KAAK+D,mBAC3G,uBAAO1D,UAAU,gBAAgB0C,QAAQ,OAAzC,2C,GArNvBhC,aCwGrB,SAASiD,EAAWrE,GAClB,OACE,sBAAKiD,GAAG,eAAevC,UAAW,oBAAsBV,EAAMsE,WAA9D,UACE,8BAAOtE,EAAMuE,KAAO,UACpB,8BAAOvE,EAAMwE,WAIJC,M,kDA9GX,aAAe,IAAD,8BACV,gBACKtE,MAAQ,CACTuE,OAAO,GACPC,OAAO,IAEX,EAAKC,mBAAmB,EAAKA,mBAAmB1E,KAAxB,gBACxB,EAAK2E,mBAAmB,EAAKA,mBAAmB3E,KAAxB,gBACxB,EAAK4E,aAAa,EAAKA,aAAa5E,KAAlB,gBARR,E,sDAad,SAAmBuC,GACfpC,KAAKC,SAAS,CACVqE,OAAQlC,EAAEC,OAAOC,U,gCAIzB,SAAmBF,GACfpC,KAAKC,SAAS,CACVoE,OAAQjC,EAAEC,OAAOC,U,0BAIzB,WACI,GAAGtC,KAAKF,MAAMuE,QAAUrE,KAAKF,MAAMwE,OACnC,IAAIJ,GAAKlE,KAAKF,MAAMuE,QAAQrE,KAAKF,MAAMwE,OAAOtE,KAAKF,MAAMwE,SAASI,QAAQ,GAC1E,OAAOR,I,2BAEX,SAAcA,GACV,IAAIS,EAAa,CACfR,MAAO,GACPF,WAAY,IAuBd,OApBIC,GAAO,MACTS,EAAWR,MAAQ,eACnBQ,EAAWV,WAAa,gBAEjBC,GAAO,MACdS,EAAWR,MAAQ,eACnBQ,EAAWV,WAAa,iBAEjBC,GAAO,MACdS,EAAWR,MAAQ,eACnBQ,EAAWV,WAAa,iBAEjBC,GAAO,IACdS,EAAWR,MAAQ,eACnBQ,EAAWV,WAAa,iBAExBU,EAAWR,MAAQ,MACnBQ,EAAWV,WAAa,iBAGnBU,I,oBAGX,WACI,IAAIT,EAAIlE,KAAKyE,eACTG,EAAQ5E,KAAK6E,cAAcX,GAC/B,OACI,sBAAK7D,UAAU,YAAf,UACI,eAACoC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UAAgB,cAAC,IAAD,CAAM7B,GAAG,kBAAT,4BAChB,cAAC6B,EAAA,EAAD,CAAgBC,QAAM,EAAtB,sCAEH,sBAAKtC,UAAU,kBAAf,UACD,qBAAKA,UAAU,mBACf,qBAAKA,UAAU,WAAf,SACJ,+BACI,sBAAKA,UAAU,MAAf,UACA,sBAAKA,UAAU,sBAAf,UACA,kDACA,sBAAKA,UAAU,iBAAf,UACI,uBAAOA,UAAU,eAAeuC,GAAG,SAASC,KAAK,SAASrB,MAAI,EAACc,MAAQtC,KAAKF,MAAMuE,OAASvB,SAAW9C,KAAKwE,qBAC3G,uBAAOnE,UAAU,gBAAgB0C,QAAQ,SAAzC,sBAIN,sBAAK1C,UAAU,sBAAf,UACE,kDACE,sBAAKA,UAAU,iBAAf,UACE,uBAAOA,UAAU,eAAeuC,GAAG,SAASC,KAAK,SAASG,KAAK,SAASV,MAAQtC,KAAKF,MAAMwE,OAASxB,SAAW9C,KAAKuE,qBACpH,uBAAOlE,UAAU,gBAAgB0C,QAAQ,SAAzC,4BAMT,qBAAK1C,UAAU,aAChB,qBAAKA,UAAU,kBAAf,SACE,cAAC2D,EAAD,CAAYE,IAAKA,EAAKC,MAAOS,EAAQT,MAAOF,WAAYW,EAAQX,eAElE,qBAAK5D,UAAU,uB,GAhGPU,aCgIH+D,E,kDAhIX,aAAe,IAAD,8BACV,gBACKhF,MAAQ,CACTiF,GAAI,GACJC,IAAK,GACLC,IAAI,GACJnD,GAAG,IAEP,EAAKoD,eAAiB,EAAKA,eAAerF,KAApB,gBACtB,EAAKsF,gBAAkB,EAAKA,gBAAgBtF,KAArB,gBACvB,EAAKuF,gBAAkB,EAAKA,gBAAgBvF,KAArB,gBACvB,EAAKwF,gBAAkB,EAAKA,gBAAgBxF,KAArB,gBACvB,EAAKsC,UAAY,EAAKA,UAAUtC,KAAf,gBAZP,E,mDAgBd,SAAgBuC,GACZpC,KAAKC,SAAS,CACVgF,IAAK7C,EAAEC,OAAOC,QAElBtC,KAAKmC,UAAU,MAAOC,EAAEC,OAAOC,S,6BAEnC,SAAgBF,GACZpC,KAAKC,SAAS,CACVqF,IAAKlD,EAAEC,OAAOC,QAElBtC,KAAKmC,UAAU,KAAMC,EAAEC,OAAOC,S,4BAElC,SAAeF,GACXpC,KAAKC,SAAS,CACV8E,GAAI3C,EAAEC,OAAOC,QAEjBtC,KAAKmC,UAAU,KAAMC,EAAEC,OAAOC,S,6BAElC,SAAgBF,GACZpC,KAAKC,SAAS,CACV+E,IAAK5C,EAAEC,OAAOC,QAElBtC,KAAKmC,UAAU,MAAOC,EAAEC,OAAOC,S,uBAEnC,SAAUC,EAAQC,GACV,OAAOD,GACH,IAAK,KAAMvC,KAAKC,SAAS,CACrB+E,IAAS,OAAJxC,EACLyC,IAAS,IAAJzC,EACL8C,IAAS,KAAJ9C,IAET,MACA,IAAK,MAAMxC,KAAKC,SAAS,CACrB8E,GAAGvC,EAAI,OACPyC,IAAS,IAAJzC,EACL8C,IAAQ,IAAJ9C,IAER,MACA,IAAK,MAAOxC,KAAKC,SAAS,CACtB+E,IAAKxC,EAAI,IACTuC,GAAIvC,EAAI,IACR8C,IAAI9C,EAAI,QAEZ,MACA,IAAK,MAAMxC,KAAKC,SAAS,CACrB8E,GAAGvC,EAAI,KACPyC,IAAQ,MAAJzC,EACJwC,IAAIxC,EAAI,S,oBAMxB,WACI,OACI,sBAAKnC,UAAU,YAAf,UACO,eAACoC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,UAAgB,cAAC,IAAD,CAAM7B,GAAG,kBAAT,4BAChB,cAAC6B,EAAA,EAAD,CAAgBC,QAAM,EAAtB,+CAEJ,qBAAKtC,UAAU,kBAAf,SACI,qBAAKA,UAAU,YAAf,SACI,iCACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,wDACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uBAAOA,UAAU,eAAeuC,GAAG,KAAKC,KAAK,SAASP,MAAOtC,KAAKF,MAAMiF,GAAIjC,SAAU9C,KAAKkF,iBAC3F,uBAAO7E,UAAU,gBAAgB0C,QAAQ,KAAzC,2BAIZ,sBAAK1C,UAAU,mBAAf,UACI,wDACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uBAAOA,UAAU,eAAeuC,GAAG,MAAMC,KAAK,SAASG,KAAK,MAAMV,MAAOtC,KAAKF,MAAMkF,IAAKlC,SAAU9C,KAAKmF,kBACxG,uBAAO9E,UAAU,gBAAgB0C,QAAQ,MAAzC,+BAKhB,uBACA,sBAAK1C,UAAU,MAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,8DACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uBAAOA,UAAU,eAAeuC,GAAG,MAAMC,KAAK,SAASP,MAAOtC,KAAKF,MAAMmF,IAAKnC,SAAU9C,KAAKoF,kBAC7F,uBAAO/E,UAAU,gBAAgB0C,QAAQ,MAAzC,4BAIZ,sBAAK1C,UAAU,mBAAf,UACI,wDACA,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,uBAAOA,UAAU,eAAeuC,GAAG,MAAMC,KAAK,SAASG,KAAK,MAAMV,MAAOtC,KAAKF,MAAMwF,IAAKxC,SAAU9C,KAAKqF,kBACxG,uBAAOhF,UAAU,gBAAgB0C,QAAQ,MAAzC,6C,GApHzBhC,aCQbwE,E,4JACF,WACI,OACI,gCACI,cAAC,EAAD,IACA,8BACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAA6CC,WAAW,OAAOC,QAAS,IAAxE,SACI,eAAC,IAAD,CAAQC,SAAU5F,KAAKL,MAAMiG,SAA7B,UACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAW,kBAAI,cAAC,EAAD,OACnD,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,sBAAsBC,UAAW,kBAAI,cAAC,EAAD,OACvD,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,yBAAyBC,UAAW,kBAAI,cAAC,EAAD,OAC1D,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,yBAAyBC,UAAW,kBAAI,cAAC,EAAD,OAC1D,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,uBAAuBC,UAAW,kBAAI,cAAC,EAAD,OAExD,cAAC,IAAD,CAAUlF,GAAG,wBARDb,KAAKL,MAAMiG,SAASI,SAahD,cAAC,EAAD,W,GApBGjF,aAyBJkF,cAAWV,G,wBC7B1BW,IAAQC,IAAIC,IAAKC,IAAQC,IAAQC,IAASC,IAASC,K,IAcpCC,E,4JAXX,WACI,OACE,cAAC,IAAD,UACA,qBAAKrG,UAAU,MAAf,SACE,cAAC,EAAD,Y,GALMU,aCEH4F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,kBCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5b0d1b01.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport 'font-awesome/css/font-awesome.min.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.toggleNav = this.toggleNav.bind(this);\n        this.state={\n            isNavOpen:false,\n        }\n    }\n    toggleNav() {\n        this.setState({\n          isNavOpen: !this.state.isNavOpen\n        });\n      }\n    render() {\n        return (\n            <Navbar dark expand=\"md\">\n                <div className=\"header\">\n                    <NavbarToggler onClick={this.toggleNav} />\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\n                        <Nav navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/unit-converter' onClick={this.toggleNav}><FontAwesomeIcon icon=\"home\"/> 主頁</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/unit-converter/bmi' onClick={this.toggleNav}><FontAwesomeIcon icon=\"user-md\" /> BMI計算器</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/unit-converter/length' onClick={this.toggleNav}><FontAwesomeIcon icon=\"ruler\"/> 長度轉換器</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/unit-converter/weight' onClick={this.toggleNav}><FontAwesomeIcon icon=\"weight\"/> 重量轉換器</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/unit-converter/area' onClick={this.toggleNav}><FontAwesomeIcon icon=\"chart-area\"/> 面積轉換器</NavLink>\n                            </NavItem>\n                        </Nav>\n                        \n                    </Collapse>\n                </div>\n            </Navbar>\n        );\n    }\n}\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nfunction Footer(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-2 offset-1 col-sm-2\">\n                    <h6>網站指南</h6>\n                    <ul className=\"list-unstyled\">\n                    <li><Link to='/unit-converter'>主頁</Link></li>\n                        <li><Link to='/unit-converter/bmi'>BMI計算器</Link></li>\n                        <li><Link to='/unit-converter/weight'>重量</Link></li>\n\n                    </ul>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                <h6>容積/面積</h6>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to='/unit-converter/length'>長度</Link></li>\n                        <li><Link to='/unit-converter/area'>面積</Link></li>\n                    </ul>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2021 <a href=\"\">Zelina TO</a></p>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;","import { Container, Row, Col } from \"reactstrap\";\nimport React from 'react';\n\nfunction Home(props){\n    return(\n        <Container>\n        <Row>\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>單位轉換器</Col>\n        </Row>\n        <Row>\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>免費轉換不同單位，而且不會記錄你的數據</Col>\n        </Row>\n    </Container>\n    );\n}\n\nexport default Home;","import { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass Length extends Component {\n    constructor() {\n        super();\n        this.state = {\n            m: '',\n            ft: '',\n            cm:'',\n            in:''\n        }\n        this.handleMChange = this.handleMChange.bind(this);\n        this.handleFtChange = this.handleFtChange.bind(this);\n        this.handleCmChange = this.handleCmChange.bind(this);\n        this.handleInChange = this.handleInChange.bind(this);\n        this.calculate = this.calculate.bind(this);\n\n    }\n\n    handleCmChange(e) {\n        this.setState({\n            cm: e.target.value\n        });\n        this.calculate('cm', e.target.value);\n    }\n    handleInChange(e) {\n        this.setState({\n            in: e.target.value\n        });\n        this.calculate('in', e.target.value);\n    }\n    handleMChange(e) {\n        this.setState({\n            m: e.target.value\n        });\n        this.calculate('m', e.target.value);\n    }\n    handleFtChange(e) {\n        this.setState({\n            ft: e.target.value\n        });\n        this.calculate('ft', e.target.value);\n    }\n    calculate(_value, num) {\n            switch(_value){\n                case \"m\": this.setState({\n                    ft: num*3.28084,\n                    cm: num*100,\n                    in: num/0.0254\n                });\n                break;\n                case 'ft':this.setState({\n                    m:num/3.28084,\n                    cm: num/30.48,\n                    in:num*12\n                });\n                break;\n                case \"cm\": this.setState({\n                    ft: num*3.28084,\n                    m: num*10,\n                    in:num/2.54\n                });\n                break;\n                case 'in':this.setState({\n                    m:num/3.28084,\n                    cm:num*2.54,\n                    ft:num/12,\n                });\n                break;\n            }\n\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                   <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/unit-converter\">主頁</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>長度轉換器</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"row row-content\">\n                    <div className=\"col-sm-12\">\n                        <form>\n                            <div className=\"row\">\n                                <div className=\"form-group col-6\">\n                                    <legend>米</legend>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <input className=\"form-control\" id=\"m\" type=\"number\" value={this.state.m} onChange={this.handleMChange} />\n                                            <label className=\"control-label\" htmlFor=\"m\">m</label>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-group col-6\">\n                                    <legend>尺</legend>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <input className=\"form-control\" id=\"ft\" type=\"number\" name=\"ft\" value={this.state.ft} onChange={this.handleFtChange} />\n                                            <label className=\"control-label\" htmlFor=\"ft\">ft</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <br/>\n                            <div className=\"row\">\n                                <div className=\"form-group col-6\">\n                                    <legend>厘米</legend>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <input className=\"form-control\" id=\"cm\" type=\"number\" value={this.state.cm} onChange={this.handleCmChange} />\n                                            <label className=\"control-label\" htmlFor=\"cm\">cm</label>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-group col-6\">\n                                    <legend>吋</legend>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <input className=\"form-control\" id=\"in\" type=\"number\" name=\"in\" value={this.state.in} onChange={this.handleInChange} />\n                                            <label className=\"control-label\" htmlFor=\"in\">in</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\nexport default Length;","import { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass Weight extends Component {\n    constructor() {\n        super();\n        this.state = {\n            kg: '',\n            g: '',\n            t:'',\n            lb:'',\n            oz:'',\n            jin:'',\n            tael:'',\n        }\n        this.handleKgChange = this.handleKgChange.bind(this);\n        this.handleGChange = this.handleGChange.bind(this);\n        this.handleTChange = this.handleTChange.bind(this);\n        this.handleLbChange = this.handleLbChange.bind(this);\n        this.handleOzChange = this.handleOzChange.bind(this);\n        this.handleJinChange = this.handleJinChange.bind(this);\n        this.handleTaelChange = this.handleTaelChange.bind(this);\n\n        this.calculate = this.calculate.bind(this);\n\n    }\n\n    handleKgChange(e) {\n        this.setState({\n            kg: e.target.value\n        });\n        this.calculate('kg', e.target.value);\n    }\n    handleGChange(e) {\n        this.setState({\n            g: e.target.value\n        });\n        this.calculate('g', e.target.value);\n    }\n    handleTChange(e) {\n        this.setState({\n            t: e.target.value\n        });\n        this.calculate('t', e.target.value);\n    }\n    handleLbChange(e) {\n        this.setState({\n            lb: e.target.value\n        });\n        this.calculate('lb', e.target.value);\n    }\n    handleOzChange(e) {\n        this.setState({\n            oz: e.target.value\n        });\n        this.calculate('oz', e.target.value);\n    }\n\n    handleJinChange(e) {\n        this.setState({\n            jin: e.target.value\n        });\n        this.calculate('jin', e.target.value);\n    }\n    handleTaelChange(e) {\n        this.setState({\n            tael: e.target.value\n        });\n        this.calculate('tael', e.target.value);\n    }\n    calculate(_value, num) {\n            switch(_value){\n                case \"kg\": this.setState({\n                    g: num*1000,\n                    t: num/1000,\n                    lb: num*2.204,\n                    oz: num*35.274,\n                    jin:num/1.653,\n                    tael:num*26.45\n                });\n                break;\n                case \"g\": this.setState({\n                    kg: num/1000,\n                    t: num/1000000,\n                    lb: num/454,\n                    oz: num*28.35,\n                    jin:num/500,\n                    tael:num/37.79\n                });\n                break;\n                case \"t\": this.setState({\n                    g: num*1000000,\n                    kg: num*1000,\n                    lb: num*2205,\n                    oz: num*35274,\n                    jin:num*1653,\n                    tael:num*26888.97\n                });\n                break;\n                case \"lb\": this.setState({\n                    g: num*454,\n                    t: num/2205,\n                    kg: num/2.205,\n                    oz: num*16,\n                    jin:num/1.653,\n                    tael:num*12\n                });\n                break;\n                case \"oz\": this.setState({\n                    g: num/28.35,\n                    t: num/35274,\n                    lb: num/16,\n                    kg: num/35.274,\n                    jin:num/1.653,\n                    tael:num*1.33\n                });\n                break;\n                case \"jin\": this.setState({\n                    g: num*500,\n                    t: num/2205,\n                    kg: num/2.205,\n                    oz: num*16,\n                    lb:num*1.653,\n                    tael:num*10\n                });\n                break;\n                case \"tael\": this.setState({\n                    g: num*37.49,\n                    t: num/26888.97,\n                    lb: num/12,\n                    kg: num/26.45,\n                    jin:num/10,\n                    oz:num/1.33\n                });\n                break;\n            \n            }\n\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                   <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/unit-converter\">主頁</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>重量轉換器</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"row row-content\">\n                    <div className=\"col-sm-12\">\n                        <form>\n                            <div className=\"row\">\n                                <div className=\"form-group col-6\">\n                                    <legend>公斤</legend>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <input className=\"form-control\" id=\"KG\" type=\"number\" value={this.state.kg} onChange={this.handleKgChange} />\n                                            <label className=\"control-label\" htmlFor=\"kg\">kg</label>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-group col-6\">\n                                    <legend>克</legend>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <input className=\"form-control\" id=\"g\" type=\"number\" name=\"g\" value={this.state.g} onChange={this.handleGChange} />\n                                            <label className=\"control-label\" htmlFor=\"g\">g</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <br/>\n                            <div className=\"row\">\n                                <div className=\"form-group col-6\">\n                                    <legend>噸</legend>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <input className=\"form-control\" id=\"t\" type=\"number\" value={this.state.t} onChange={this.handleTChange} />\n                                            <label className=\"control-label\" htmlFor=\"t\">t</label>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-group col-6\">\n                                    <legend>磅</legend>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <input className=\"form-control\" id=\"lb\" type=\"number\" name=\"lb\" value={this.state.lb} onChange={this.handleLbChange} />\n                                            <label className=\"control-label\" htmlFor=\"lb\">lb</label>\n                                        </div>\n                                    </div>\n                                </div>\n                                </div>\n                                <div className=\"row\">\n                                <div className=\"form-group col-6\">\n                                    <legend>盎司</legend>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <input className=\"form-control\" id=\"oz\" type=\"number\" name=\"oz\" value={this.state.oz} onChange={this.handleOzChange} />\n                                            <label className=\"control-label\" htmlFor=\"oz\">oz</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"form-group col-6\">\n                                    <legend>斤</legend>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <input className=\"form-control\" id=\"jin\" type=\"number\" value={this.state.jin} onChange={this.handleJinChange} />\n                                            <label className=\"control-label\" htmlFor=\"jin\">jin</label>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-group col-6\">\n                                    <legend>兩</legend>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <input className=\"form-control\" id=\"tael\" type=\"number\" name=\"tael\" value={this.state.tael} onChange={this.handleTaelChange} />\n                                            <label className=\"control-label\" htmlFor=\"tael\">tael</label>\n                                        </div>\n                                    </div>\n                                </div>\n                                </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\nexport default Weight;","import { Component } from \"react\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\n\nclass Bmi extends Component{\n    constructor() {\n        super();\n        this.state = {\n            weight:'',\n            height:'',\n        }\n        this.handleHeightChange=this.handleHeightChange.bind(this);\n        this.handleWeightChange=this.handleWeightChange.bind(this);\n        this.calculateBMI=this.calculateBMI.bind(this);\n        \n    }\n\n  \n    handleHeightChange(e) {\n        this.setState({\n            height: e.target.value\n        });\n    \n    }\n    handleWeightChange(e) {\n        this.setState({\n            weight: e.target.value\n        });\n    \n    }\n    calculateBMI(){\n        if(this.state.weight && this.state.height)\n        var bmi=(this.state.weight/(this.state.height*this.state.height)).toFixed(2);\n        return bmi;\n    }\n    getBMIResults(bmi){\n        let bmiResults = {\n          label: '',\n          alertClass: '',\n        };\n        \n        if (bmi <= 18.5){\n          bmiResults.label = '過輕';\n          bmiResults.alertClass = 'alert-danger';\n        } \n        else if (bmi <= 24.9) {\n          bmiResults.label = '正常';\n          bmiResults.alertClass = 'alert-success';\n        }\n        else if (bmi <= 29.9){\n          bmiResults.label = '過重';\n          bmiResults.alertClass = 'alert-warning';\n        }\n        else if (bmi >= 30) {\n          bmiResults.label = '肥胖';\n          bmiResults.alertClass = 'alert-danger';\n        } else {\n          bmiResults.label = 'BMI';\n          bmiResults.alertClass = 'alert-primary';\n        }\n    \n        return bmiResults;\n      }\n\n    render() {\n        let bmi=this.calculateBMI();\n        let results=this.getBMIResults(bmi);\n        return (\n            <div className=\"container\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/unit-converter\">主頁</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>BMI計算器</BreadcrumbItem>\n                </Breadcrumb>               \n                 <div className=\"row row-content\">\n                <div className=\"col-4 col-sm-3\"></div> \n                <div className=\"col-sm-9\">\n            <form>\n                <div className=\"row\">\n                <div className=\"form-group col-sm-5\">\n                <legend>體重</legend>\n                <div className=\"col-8 col-xs-4\">\n                    <input className=\"form-control\" id=\"weight\" type=\"number\" size value={ this.state.weight } onChange={ this.handleWeightChange } />\n                    <label className=\"control-label\" htmlFor=\"weight\">kg</label>\n                    </div>\n              </div>\n\n              <div className=\"form-group col-sm-5\">\n                <legend>高度</legend>\n                  <div className=\"col-8 col-xs-4\">\n                    <input className=\"form-control\" id=\"height\" type=\"number\" name=\"height\" value={ this.state.height } onChange={ this.handleHeightChange } />\n                    <label className=\"control-label\" htmlFor=\"height\">m</label>\n                  </div>\n              </div>\n                </div>\n            </form>\n          </div>\n           <div className=\"col-sm-3\"></div> \n          <div className=\"col-10 col-sm-6\">\n            <BmiDisplay bmi={bmi} label={results.label} alertClass={results.alertClass} />\n          </div>\n          <div className=\"col-sm-3\"></div> \n        </div>\n        </div>\n        );\n    }\n    \n}\nfunction BmiDisplay(props){\n  return (\n    <div id=\"bmiContainer\" className={\"bmi-result alert \" + props.alertClass}>\n      <div>{ props.bmi || '--.--' }</div>\n      <div>{ props.label }</div>\n    </div> \n  )\n}\nexport default Bmi;","import { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass Area extends Component {\n    constructor() {\n        super();\n        this.state = {\n            m2: '',\n            ft2: '',\n            cm2:'',\n            in:''\n        }\n        this.handleM2Change = this.handleM2Change.bind(this);\n        this.handleFt2Change = this.handleFt2Change.bind(this);\n        this.handleCm2Change = this.handleCm2Change.bind(this);\n        this.handleIn2Change = this.handleIn2Change.bind(this);\n        this.calculate = this.calculate.bind(this);\n\n    }\n\n    handleCm2Change(e) {\n        this.setState({\n            cm2: e.target.value\n        });\n        this.calculate('cm2', e.target.value);\n    }\n    handleIn2Change(e) {\n        this.setState({\n            in2: e.target.value\n        });\n        this.calculate('in', e.target.value);\n    }\n    handleM2Change(e) {\n        this.setState({\n            m2: e.target.value\n        });\n        this.calculate('m2', e.target.value);\n    }\n    handleFt2Change(e) {\n        this.setState({\n            ft2: e.target.value\n        });\n        this.calculate('ft2', e.target.value);\n    }\n    calculate(_value, num) {\n            switch(_value){\n                case \"m2\": this.setState({\n                    ft2: num*10.764,\n                    cm2: num*10000,\n                    in2: num*1550\n                });\n                break;\n                case 'ft2':this.setState({\n                    m2:num/10.764,\n                    cm2: num*929,\n                    in2:num*144\n                });\n                break;\n                case \"cm2\": this.setState({\n                    ft2: num/929,\n                    m2: num/10000,\n                    in2:num/6.452\n                });\n                break;\n                case 'in2':this.setState({\n                    m2:num/1550,\n                    cm2:num*6.452,\n                    ft2:num/144,\n                });\n                break;\n            }\n\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                   <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/unit-converter\">主頁</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>面積轉換器</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"row row-content\">\n                    <div className=\"col-sm-12\">\n                        <form>\n                            <div className=\"row\">\n                                <div className=\"form-group col-6\">\n                                    <legend>平方米</legend>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <input className=\"form-control\" id=\"m2\" type=\"number\" value={this.state.m2} onChange={this.handleM2Change} />\n                                            <label className=\"control-label\" htmlFor=\"m2\">m²</label>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-group col-6\">\n                                    <legend>平方尺</legend>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <input className=\"form-control\" id=\"ft2\" type=\"number\" name=\"ft2\" value={this.state.ft2} onChange={this.handleFt2Change} />\n                                            <label className=\"control-label\" htmlFor=\"ft2\">ft²</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <br/>\n                            <div className=\"row\">\n                                <div className=\"form-group col-6\">\n                                    <legend>平方厘米</legend>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <input className=\"form-control\" id=\"cm2\" type=\"number\" value={this.state.cm2} onChange={this.handleCm2Change} />\n                                            <label className=\"control-label\" htmlFor=\"cm2\">cm²</label>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"form-group col-6\">\n                                    <legend>平方吋</legend>\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <input className=\"form-control\" id=\"in2\" type=\"number\" name=\"in2\" value={this.state.in2} onChange={this.handleIn2Change} />\n                                            <label className=\"control-label\" htmlFor=\"in2\">in²</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\nexport default Area;","import { Component } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Home from \"./Home\";\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\nimport Length from \"./unit-converter/Length\";\nimport Weight from \"./unit-converter/Weight\";\nimport Bmi from './unit-converter/Bmi';\nimport Area from \"./unit-converter/Area\";\n\n\nclass Main extends Component{\n    render(){\n        return(\n            <div>\n                <Header/>\n                <div>\n                    <TransitionGroup>\n                        <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                            <Switch location={this.props.location}>\n                                <Route exact path='/unit-converter' component={()=><Home/>}/>\n                                <Route exact path='/unit-converter/bmi' component={()=><Bmi/>}/>\n                                <Route exact path='/unit-converter/length' component={()=><Length/>}/>\n                                <Route exact path='/unit-converter/weight' component={()=><Weight/>}/>\n                                <Route exact path='/unit-converter/area' component={()=><Area/>}/>\n\n                                <Redirect to=\"/unit-converter\" />\n                            </Switch>\n                        </CSSTransition>\n                    </TransitionGroup>\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\nexport default withRouter(Main);","import './App.css';\nimport {Component} from 'react';\nimport Main from './components/Main';\nimport {BrowserRouter} from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faHome, faRuler,faUserMd,faWeight,faChartArea } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(fab, faHome, faRuler,faUserMd,faWeight,faChartArea);\n\nclass App extends Component {\n    render() {\n        return(\n          <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}